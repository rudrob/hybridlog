input {
 pipeline {
   address => modsecurity
 }
}

filter {
  json {
    source => "message"
  }
 date {
   match => ["[transaction][time]", "dd/MMM/yyyy:HH:mm:ss Z"]
   target => "timestamp"
 }
}

filter {
  # parts of parsing based on patterns in
  # https://github.com/bitsofinfo/logstash-modsecurity/blob/master/2080_filter_section_h_parse_messages_to_auditLogTrailerMessages.conf
  # but adapted to json format and cut a bit

    if [audit_data][messages] {
      ruby {
        code => "
            def extractVal(pattern, fromString, storeResultIn, underKeyName, multiValues=false)
              if multiValues
                result = fromString.scan(pattern)
                if !result.empty?
                  storeResultIn[underKeyName] = result.flatten
                end
              else
                result = pattern.match(fromString)
                if !result.nil?
                  storeResultIn[underKeyName] = result[1]
                end
              end
            end

            auditLogTrailerMessages = Array.new()
            trailer_array = event.get('audit_data')['messages']
            trailer_array.each do |entry|
              msg = Hash.new()
              # extractVal(/Message: (.+)\s($|(\s*\[file))/, entry, msg, 'info')
              extractVal(/\[file \"(.*?)\"\]/, entry, msg, 'file')
              extractVal(/\[line \"(.*?)\"\]/, entry, msg, 'line')
              extractVal(/\[id \"(.*?)\"\]/, entry, msg, 'id')
              extractVal(/\[msg \"(.*?)\"\]/, entry, msg, 'msg')
              extractVal(/\[severity \"(.*?)\"\]/, entry, msg, 'severity')
              extractVal(/\[data \"(.*?)\"\]/, entry, msg, 'data')
              extractVal(/\[tag \"(.*?)\"\]/, entry, msg, 'tag')
              auditLogTrailerMessages.push(msg)
            end

            event.set('auditLogTrailerMessages', auditLogTrailerMessages)
          "
        }  
      }
  }  

# Optional cleanup can be or not be included
filter {
  mutate {
    remove_field => [ "message" ]
  }
}

output {
  elasticsearch {
    hosts => ["${ES_URL}"]
    ssl => true
    index => "modsecurity-log"
    user => "${ES_USER}"
    password => "${ES_PASSWORD}"
    ilm_enabled => false
 }
}

